# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
- group: ContosoPayroll

trigger:
  branches:
    include:
    - main
  paths:
    include:
    - full-app/*
    - azure-pipelines-full-app.yml

pool:
  vmImage: ubuntu-latest

stages:
# pipeline stage to compile backend code 
- stage: BuildandPushPayrollApp
  jobs:
  - job: BuildandTest
    displayName: Build and Test with Maven
    steps:
      - task: AzureResourceManagerTemplateDeployment@3
        displayName: Create Temp DB Server for Maven
        inputs:
          azureResourceManagerConnection: $(ARM_SERVICE_CONNECTION)
          action: 'Create Or Update Resource Group'
          resourceGroupName: 'temp-rg'
          location: westeurope
          deploymentMode: 'Incremental'
          templateLocation : 'URL of the file'
          csmFileLink: '$(ARM_TEMPLATE_BASE_URI)/infrastucture/MySqldb/azuredeploy.json'
          csmParametersFileLink: '$(ARM_TEMPLATE_BASE_URI)/infrastucture/MySqldb/azuredeploy.parameters.json'
          deploymentScope: 'Resource Group'    
          deploymentName: 'DeployTempDatabaseServer'
          workingDirectory: '$(Build.SourcesDirectory)/full-app'
      - task: AzureMysqlDeployment@1
        displayName: Create Temp DB in the Server
        inputs:
          azureSubscription: $(ARM_SERVICE_CONNECTION)
          ServerName: $(MYSQL_SERVER_NAME)
          SqlUsername: $(MYSQL_USER_NAME)
          SqlPassword: $(MYSQL_PWD)
          TaskNameSelector: 'InlineSqlTask'
          SqlInline: |
            DROP DATABASE IF EXISTS contosodb;
            CREATE DATABASE contosodb;
            USE contosodb;
      - task: CmdLine@2
        displayName: Build and Test Maven
        inputs:
          script: |
            chmod +x ./mvnw && ./mvnw clean verify
          workingDirectory: '$(Build.SourcesDirectory)/full-app'
      - task: PublishTestResults@2
        displayName: Publish Test Results
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: './TEST-*.xml' 
          searchFolder: '$(Build.SourcesDirectory)/full-app/targets/surefire-reports'
      - task: Docker@2
        displayName: Build and Push Docker Image
        inputs:
          command: buildAndPush
          containerRegistry: $(DOCKER_SERVICE_CONNECTION)
          Dockerfile: full-app/Dockerfile
          repository: $(DOCKER_REGISTORY)
          tags: '$(Build.BuildId)'
      - task: AzureResourceManagerTemplateDeployment@3
        displayName: Remove temp RG
        inputs:
          azureResourceManagerConnection: $(ARM_SERVICE_CONNECTION)
          action: 'deleteRG'
          resourceGroupName: 'temp-rg'
          location: $(LOCATION)
          deploymentScope: 'Resource Group'