# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  SERVICE_CONNECTION: lakpriyagk-docker-hub-service-connection

trigger:
  branches:
    include:
    - main
  paths:
    include:
    - full-app/*
    - azure-pipelines-full-app.yml

pool:
  vmImage: ubuntu-latest

stages:
# pipeline stage to compile backend code 
- stage: BuildandPushPayrollApp
  jobs:
  - job: BuildandTest
    displayName: Build and Test with Maven
    steps:
      - task: CmdLine@2
        displayName: Build and Test Maven
        inputs:
          script: |
            chmod +x ./mvnw && ./mvnw clean verify
          workingDirectory: '$(Build.SourcesDirectory)/full-app'
      - task: PublishTestResults@2
        displayName: Publish Test Results
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '**/TEST-*.xml' 
          searchFolder: '$(Build.SourcesDirectory)/full-app/targets/surefire-reports'
      - task: Docker@2
        displayName: Build and Push Docker Image
        inputs:
          command: buildAndPush
          containerRegistry: $(DOCKER_SERVICE_CONNECTION)
          Dockerfile: full-app/Dockerfile
          repository: $(DOCKER_REGISTORY)
          tags: '$(Build.BuildId)'
# pipeline stage to build and push the backend container to a docker registry, authenticated through service connection 
# - stage: PushAppContainerImage
#   dependsOn:
#   - BuildPayrollApp
#   condition: succeeded('BuildPayrollApp')
#   jobs:
#   - job: PushAppImage
#     displayName: Build and Push container image to docker hub

#     steps:
#       - task: Docker@2
#         displayName: Build and Push 
#         inputs:
#           command: buildAndPush
#           containerRegistry: 'lakpriyagk-docker-hub-service-connection'
#           Dockerfile: full-app/Dockerfile
#           repository: $(DOCKER_REGISTORY)
#           tags: '$(Build.BuildId)'